rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Default deny all rule
    match /{document=**} {
      allow read, write: if false;
    }
    
    // Success Stories Collection
    match /success_stories/{storyId} {
      // Anyone can read published success stories
      allow read: if resource.data.status == 'published';
      
      // Only admins can read drafts and create/update/delete any story
      allow read, write: if request.auth != null && request.auth.token.admin == true;
      
      // Comments subcollection
      match /comments/{commentId} {
        // Anyone can read comments on published stories
        allow read: if get(/databases/$(database)/documents/success_stories/$(storyId)).data.status == 'published';
        
        // Authenticated users can create comments
        allow create: if request.auth != null &&
          request.resource.data.userId == request.auth.uid &&
          request.resource.data.storyId == storyId;
          
        // Users can only delete their own comments
        allow delete: if request.auth != null && 
          resource.data.userId == request.auth.uid;
          
        // Admins can delete any comment
        allow delete: if request.auth != null && 
          request.auth.token.admin == true;
      }
    }
    
    // Success Story Comments Collection
    match /success_story_comments/{commentId} {
      // Anyone can read comments
      allow read: if true;
      
      // Authenticated users can create comments with their own userId
      allow create: if request.auth != null &&
        request.resource.data.userId == request.auth.uid;
        
      // Users can only delete their own comments
      allow delete: if request.auth != null && 
        resource.data.userId == request.auth.uid;
        
      // Admins can delete any comment
      allow delete: if request.auth != null && 
        request.auth.token.admin == true;
    }
    
    // Dev Logs Collection
    match /dev_logs/{logId} {
      // Anyone can read published dev logs
      allow read: if resource.data.status == 'published';
      
      // Only admins can read drafts and create/update/delete
      allow read, write: if request.auth != null && 
        request.auth.token.admin == true;
    }
  }
}
